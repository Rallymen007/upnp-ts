"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dgram_1 = require("dgram");
const events_1 = require("events");
const buffer_1 = require("buffer");
const device_1 = require("./device");
const SSDP_PORT = 1900;
const BROADCAST_ADDR = "239.255.255.250";
class SSDP extends events_1.EventEmitter {
    constructor(_debug, _ip) {
        super();
        this._debug = _debug;
        this._ip = _ip;
        this._skt = dgram_1.createSocket({ type: 'udp4', reuseAddr: true }, (msg, rinfo) => {
            this.processMessage(msg.toString(), rinfo);
        });
        this._skt.on('listening', () => {
            super.emit('ready');
        });
        this._skt.on('error', (err) => {
            console.warn('socket error', err);
        });
        this._skt.bind(SSDP_PORT, this._ip, () => {
            this._skt.addMembership(BROADCAST_ADDR, this._ip);
        });
    }
    shutdown() {
        this._skt.close();
    }
    headersToObj(headers) {
        let ret = [];
        let lines = headers.split("\r\n");
        for (let line of lines) {
            if (line != "" && line.indexOf(":") > 0) {
                ret[line.substr(0, line.indexOf(":")).toUpperCase().trim()] = line.substr(line.indexOf(':') + 1).trim();
            }
            else if (line != '') {
                ret['RESPONSE-TYPE'] = line.substr(0, line.indexOf(" ")).trim().toUpperCase();
            }
        }
        return ret;
    }
    processMessage(msg, info) {
        let res = this.headersToObj(msg);
        if (res['LOCATION']) {
            let d = new device_1.Device((d) => { this._debug(d); }, this._ip, res, info);
            d.discover(() => {
                super.emit('device', d);
            });
        }
    }
    search(st) {
        try {
            let buf = new buffer_1.Buffer("M-SEARCH * HTTP/1.1\r\n" +
                "HOST: " + BROADCAST_ADDR + ":" + SSDP_PORT + "\r\n" +
                "MAN: \"ssdp:discover\"\r\n" +
                "MX: 1\r\n" +
                "ST: " + st + "\r\n" +
                "USER-AGENT: nodejs/" + process.version + " UPnP/2.0 draketv/2.0\r\n\r\n", 'utf8');
            let skt2 = dgram_1.createSocket({ type: 'udp4', reuseAddr: true }, (msg, rinfo) => {
                this.processMessage(msg.toString(), rinfo);
            });
            skt2.on('error', (err) => {
                console.warn('skt2 error', err);
            });
            skt2.on('listening', () => {
                this._debug(["SSDP", "SSDP2 listening on ", skt2.address().address, skt2.address().port]);
                skt2.send(buf, 0, buf.length, SSDP_PORT, BROADCAST_ADDR, (err) => {
                    setTimeout(() => {
                        skt2.close();
                        this._debug(["SSDP", 'closing down requesting socket']);
                    }, 3000);
                });
            });
            skt2.bind(undefined, this._ip, () => {
                skt2.addMembership(BROADCAST_ADDR, this._ip);
            });
        }
        catch (e) {
            console.warn("Unhandled socket exception", e);
        }
    }
}
exports.SSDP = SSDP;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3NkcC5qcyIsInNvdXJjZVJvb3QiOiJEOi9kZXYvbm9kZV9wcm9qZWN0cy91cG5wL3NyYy8iLCJzb3VyY2VzIjpbInNzZHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBNkM7QUFDN0MsbUNBQXNDO0FBQ3RDLG1DQUFnQztBQUNoQyxxQ0FBaUM7QUFFakMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLE1BQU0sY0FBYyxHQUFHLGlCQUFpQixDQUFDO0FBRXpDLFVBQWtCLFNBQVEscUJBQVk7SUFFbEMsWUFBb0IsTUFBeUIsRUFBVSxHQUFXO1FBQzlELEtBQUssRUFBRSxDQUFDO1FBRFEsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7UUFBVSxRQUFHLEdBQUgsR0FBRyxDQUFRO1FBRTlELElBQUksQ0FBQyxJQUFJLEdBQUcsb0JBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxFQUFHLENBQUMsR0FBVyxFQUFFLEtBQVU7WUFDbEYsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDOUMsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUU7WUFDdEIsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQU87WUFDMUIsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUdqQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxjQUFjLEVBQUUs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